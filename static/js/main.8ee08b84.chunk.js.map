{"version":3,"sources":["components/BmiForm/BmiForm.jsx","components/Info/Info.jsx","components/Bar/Bar.jsx","components/App/App.jsx","index.js"],"names":["BmiForm","change","useState","weight","height","date","state","setState","handleChange","e","target","value","Date","toLocaleString","split","name","className","htmlFor","id","type","min","max","placeholder","onChange","disabled","onClick","Info","bmi","deleteCard","data-test","Bar","labelData","bmiData","data","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","label","backgroundColor","borderColor","pointRadius","pointHoverRadius","pointHoverBorderColor","pointHoverBorderWidth","options","responsive","scales","xAxes","scaleLabel","display","labelString","fontSize","fontColor","gridLines","color","ticks","yAxes","beginAtZero","tooltips","titleFontSize","bodyFontSize","uuidv1","require","App","JSON","parse","localStorage","getItem","setData","handleDelete","setItem","stringify","newState","filter","i","useEffect","map","obj","val","heightInM","toFixed","newVal","len","length","slice","info","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ee08b84.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../App/App.css';\nimport PropTypes from 'prop-types';\n\nconst BmiForm = ({ change }) => {\n\tconst [state, setState] = useState({\n\t\tweight: '',\n\t\theight: '',\n\t\tdate: ''\n\t});\n\n\tconst handleChange = e => {\n\t\tif (e.target.value > 999) {\n\t\t\te.target.value = 999;\n\t\t}\n\t\tconst date = new Date().toLocaleString().split(',')[0];\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[e.target.name]: e.target.value,\n\t\t\tdate\n\t\t});\n\t};\n\n\tconst handleSubmit = () => {\n\t\tchange(state);\n\t\tsetState({\n\t\t\tweight: '',\n\t\t\theight: '',\n\t\t\tdate: ''\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col m6 s12\">\n\t\t\t\t\t<label htmlFor=\"weight\">Weight (in kg)</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"weight\"\n\t\t\t\t\t\tname=\"weight\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tmax=\"999\"\n\t\t\t\t\t\tplaceholder=\"50\"\n\t\t\t\t\t\tvalue={state.weight}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col m6 s12\">\n\t\t\t\t\t<label htmlFor=\"height\">Height (in cm)</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"height\"\n\t\t\t\t\t\tname=\"height\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tmax=\"999\"\n\t\t\t\t\t\tplaceholder=\"176\"\n\t\t\t\t\t\tvalue={state.height}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"center\">\n\t\t\t\t<button\n\t\t\t\t\tid=\"bmi-btn\"\n\t\t\t\t\tclassName=\"calculate-btn\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tdisabled={state.weight === '' || state.height === ''}\n\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\tCalculate BMI\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nBmiForm.propTypes = {\n\tchange: PropTypes.func.isRequired\n};\n\nexport default BmiForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Info = ({ weight, height, id, date, bmi, deleteCard }) => {\n  const handleDelete = e => {\n    deleteCard(id);\n  };\n\n  return (\n    <div className=\"col m6 s12\">\n      <div className=\"card\">\n        <div className=\"card-content\">\n          <span className=\"card-title\" data-test=\"bmi\">\n            BMI: {bmi}\n          </span>\n          <div className=\"card-data\">\n            <span data-test=\"weight\">Weight: {weight} kg</span>\n            <span data-test=\"height\">Height: {height} cm</span>\n            <span data-test=\"date\">Date: {date}</span>\n          </div>\n\n          <button className=\"delete-btn\" onClick={handleDelete}>\n            X\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInfo.propTypes = {\n  weight: PropTypes.string,\n  height: PropTypes.string,\n  id: PropTypes.string,\n  date: PropTypes.string,\n  bmi: PropTypes.string,\n  deleteCard: PropTypes.func\n};\n\nexport default Info;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\nconst Bar = ({ labelData, bmiData }) => {\n  const data = canvas => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(63, 81, 181, 700);\n    gradient.addColorStop(0, '#929dd9');\n    gradient.addColorStop(1, '#172b4d');\n\n    return {\n      labels: labelData,\n      datasets: [\n        {\n          label: 'BMI',\n          data: bmiData,\n          backgroundColor: gradient,\n          borderColor: '#3F51B5',\n          pointRadius: 6,\n          pointHoverRadius: 8,\n          pointHoverBorderColor: 'white',\n          pointHoverBorderWidth: 2\n        }\n      ]\n    };\n  };\n\n  const options = {\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Date',\n            fontSize: 18,\n            fontColor: 'white'\n          },\n          gridLines: {\n            display: false,\n            color: 'white'\n          },\n          ticks: {\n            fontColor: 'white',\n            fontSize: 16\n          }\n        }\n      ],\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'BMI',\n            fontSize: 18,\n            fontColor: 'white'\n          },\n          gridLines: {\n            display: false,\n            color: 'white'\n          },\n          ticks: {\n            fontColor: 'white',\n            fontSize: 16,\n            beginAtZero: true\n          }\n        }\n      ]\n    },\n    tooltips: {\n      titleFontSize: 13,\n      bodyFontSize: 13\n    }\n  };\n\n  return (\n    <>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nBar.propTypes = {\n  labelData: PropTypes.array,\n  bmiData: PropTypes.array\n};\n\nexport default Bar;\n","import React, { useState, useEffect } from 'react';\nimport BmiForm from '../BmiForm/BmiForm';\nimport Info from '../Info/Info';\nimport Bar from '../Bar/Bar';\nimport './App.css';\nimport 'materialize-css/dist/css/materialize.min.css';\nconst uuidv1 = require('uuid/v4');\n\nconst App = () => {\n  let initialState = () => JSON.parse(localStorage.getItem('data')) || [];\n  const [state, setState] = useState(initialState);\n  const [data, setData] = useState({});\n\n  const handleChange = val => {\n    let heightInM = val.height / 100;\n    val.bmi = (val.weight / (heightInM * heightInM)).toFixed(2);\n    val.id = uuidv1();\n    let newVal = [...state, val];\n    let len = newVal.length;\n    if (len > 7) newVal = newVal.slice(1, len);\n    setState(newVal);\n  };\n\n  const handleDelete = id => {\n    localStorage.setItem('lastState', JSON.stringify(state));\n    let newState = state.filter(i => {\n      return i.id !== id;\n    });\n    setState(newState);\n  };\n  const handleUndo = () => {\n    setState(JSON.parse(localStorage.getItem('lastState')));\n  };\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(state));\n    const date = state.map(obj => obj.date);\n    const bmi = state.map(obj => obj.bmi);\n    let newData = { date, bmi };\n    setData(newData);\n  }, [state]);\n\n  return (\n    <div className='container'>\n      <div className='row center'>\n        <h1 className='white-text'> BMI Tracker </h1>\n      </div>\n      <div className='row'>\n        <div className='col m12 s12'>\n          <BmiForm change={handleChange} />\n          <Bar labelData={data.date} bmiData={data.bmi} />\n          <div>\n            <div className='row center'>\n              <h4 className='white-text'>7 Day Data</h4>\n            </div>\n            <div className='data-container row'>\n              {state.length > 0 ? (\n                <>\n                  {state.map(info => (\n                    <Info\n                      key={info.id}\n                      id={info.id}\n                      weight={info.weight}\n                      height={info.height}\n                      date={info.date}\n                      bmi={info.bmi}\n                      deleteCard={handleDelete}\n                    />\n                  ))}\n                </>\n              ) : (\n                <div className='center white-text'>No log found</div>\n              )}\n            </div>\n          </div>\n          {localStorage.getItem('lastState') !== null ? (\n            <div className='center'>\n              <button className='calculate-btn' onClick={handleUndo}>\n                Undo\n              </button>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}